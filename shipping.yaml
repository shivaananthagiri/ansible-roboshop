- name: installing shipping components
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1    
  tasks:
  - name: installing maven
    ansible.builtin.package: 
      name: maven
      state: present
  - name: createing a user with name roboshop
    ansible.builtin.user:
      name: roboshop
  - name: createing a app directory
    ansible.builtin.file:
      path: /app 
      state: directory
  - name: downloading shipping application using a link
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp
  - name: un-ziping a package
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes
  - name: installing dependencys
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app
  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app
  - name: copying shipping.service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  - name: doing daemon-reload 
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: installing mysql client
    ansible.builtin.package:
      name: mysql
      state: present
  - name: cityes schema exsists are not
    ansible.builtin.shell: mysql -h mysql.ananthagiri.online -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'" 
    register: schema
  - name: load schema
    ansible.builtin.command: mysql -h mysql.ananthagiri.online -uroot -p{{mysql_password}} < /app/schema/shipping.sql 
    when: schema.stdout != "1"
  - name: restart and enable shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes

